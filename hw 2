https://github.com/esnoddy1/imaging.git

vol1 = niftiread('ICBMlores.nii.gz');
vol2 = niftiread('brainT1clores.nii.gz');
figure(1); imagesc(vol1(:,:,64) ); colormap gray
figure(2); imagesc(vol2(:,:,64) ); colormap gray

a = vol1;
b = vol2;

% Mean Sq Error
MSQ = sum((a(:) - b(:)).^2) / numel(a) %numel returns number of elements in a table

% NCC
a_num = a(:) - mean(a(:));
b_num = b(:) - mean(b(:));

numerator = (dot(a_num, b_num))^2; 

a_norm = sqrt(sum(a_num.^2));
b_norm = sqrt(sum(b_num.^2));

NCC = - numerator/(a_norm^2 * b_norm^2);

%MI

%Find entropy a 
a = a(:);

min1 = min(a); max1 = max(a);
intensity_range = (max1-min1);
bin_size = (max1 - min1)/nbins;

prob_1 = zeros(nbins+1,1);
for iii = 1:length(a);
    idx = floor((a(iii)-min1)/bin_size)+1;
    prob_1(idx) = prob_1(idx)+1;
end

prob_1 = prob_1/length(a);
entropy_a = -sum(prob_1.*log(prob_1))

%Find entropy b
b = b(:);

min2 = min(b); max2 = max(b);
bin_size_2 = (max2 - min2)/nbins;

prob_2 = zeros(nbins+1,1);
for jjj = 1:length(b);
    index = floor((b(jjj)-min2)/bin_size_2)+1;
    prob_2(index) = prob_2(index)+1;
end

prob_2 = prob_2/length(b)
entropy_b = -sum(prob_2.*log(prob_2))

%Find joint entropy
indrow = double(a(:)) + 1;
indcol = double(b(:)) + 1;

count = 0
for i=1:length(a)
    for j=1:length(b)
        for k = 1:size(indrow)
         %count number of occurences where i== indrow(k) and j == indcol(k)
         if i==indrow(k) and j==indcol(k)
        end
       %set h(i,j) = count value you get from previous loop 
    end
end
